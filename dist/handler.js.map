{"version":3,"sources":["webpack://curriedForage/webpack/universalModuleDefinition","webpack://curriedForage/webpack/bootstrap","webpack://curriedForage/./src/handler.ts"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","handler","returner","val","type","returnerType","console","log","Error","message","map","v","e","trace","logger","msg","loggerType","error","maybeCurry","fn","jsonPurify","parsedObj","model","maxLen","safeObj","str","length","JSON","parse","Array","isArray","forEach","prop"],"mappings":"CAAA,SAA2CA,EAAMC,GAC1B,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,IACQ,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,GACe,iBAAZC,QACdA,QAAuB,cAAID,IAE3BD,EAAoB,cAAIC,IAR1B,CASGK,QAAQ,WACX,O,YCTE,IAAIC,EAAmB,GAGvB,SAASC,EAAoBC,GAG5B,GAAGF,EAAiBE,GACnB,OAAOF,EAAiBE,GAAUP,QAGnC,IAAIC,EAASI,EAAiBE,GAAY,CACzCC,EAAGD,EACHE,GAAG,EACHT,QAAS,IAUV,OANAU,EAAQH,GAAUI,KAAKV,EAAOD,QAASC,EAAQA,EAAOD,QAASM,GAG/DL,EAAOQ,GAAI,EAGJR,EAAOD,QA0Df,OArDAM,EAAoBM,EAAIF,EAGxBJ,EAAoBO,EAAIR,EAGxBC,EAAoBQ,EAAI,SAASd,EAASe,EAAMC,GAC3CV,EAAoBW,EAAEjB,EAASe,IAClCG,OAAOC,eAAenB,EAASe,EAAM,CAAEK,YAAY,EAAMC,IAAKL,KAKhEV,EAAoBgB,EAAI,SAAStB,GACX,oBAAXuB,QAA0BA,OAAOC,aAC1CN,OAAOC,eAAenB,EAASuB,OAAOC,YAAa,CAAEC,MAAO,WAE7DP,OAAOC,eAAenB,EAAS,aAAc,CAAEyB,OAAO,KAQvDnB,EAAoBoB,EAAI,SAASD,EAAOE,GAEvC,GADU,EAAPA,IAAUF,EAAQnB,EAAoBmB,IAC/B,EAAPE,EAAU,OAAOF,EACpB,GAAW,EAAPE,GAA8B,iBAAVF,GAAsBA,GAASA,EAAMG,WAAY,OAAOH,EAChF,IAAII,EAAKX,OAAOY,OAAO,MAGvB,GAFAxB,EAAoBgB,EAAEO,GACtBX,OAAOC,eAAeU,EAAI,UAAW,CAAET,YAAY,EAAMK,MAAOA,IACtD,EAAPE,GAA4B,iBAATF,EAAmB,IAAI,IAAIM,KAAON,EAAOnB,EAAoBQ,EAAEe,EAAIE,EAAK,SAASA,GAAO,OAAON,EAAMM,IAAQC,KAAK,KAAMD,IAC9I,OAAOF,GAIRvB,EAAoB2B,EAAI,SAAShC,GAChC,IAAIe,EAASf,GAAUA,EAAO2B,WAC7B,WAAwB,OAAO3B,EAAgB,SAC/C,WAA8B,OAAOA,GAEtC,OADAK,EAAoBQ,EAAEE,EAAQ,IAAKA,GAC5BA,GAIRV,EAAoBW,EAAI,SAASiB,EAAQC,GAAY,OAAOjB,OAAOkB,UAAUC,eAAe1B,KAAKuB,EAAQC,IAGzG7B,EAAoBgC,EAAI,GAIjBhC,EAAoBA,EAAoBiC,EAAI,G,2+CClExC,EAAAC,QAAU,CAyBrBC,SAAA,SAAUC,EAAUC,GAClB,OAAO,SAAUC,GACVD,IACHA,EAAOC,GAET,IAAMlB,SAAWiB,EACjB,GAAU,WAANjB,GAAwB,WAANA,EA4CpB,OAAOgB,EA3CP,OAAQC,GACN,KAAK,EACL,IAAK,QACH,OACF,KAAK,EACL,IAAK,UACHE,QAAQC,IAAIJ,GACZ,MACF,KAAK,EACL,IAAK,QACH,MAAIA,aAAeK,OAGjBL,EAAIM,UAAmBN,EAAIM,QAAU,YAC/BN,GAEA,IAAIK,MAAML,GAAO,aAE3B,KAAK,EACL,IAAK,SACH,OAAOA,UAAiD,IAARA,EAClD,KAAK,EACL,IAAK,SACH,GAAY,OAARA,EAAc,MAAO,OACzB,QAAY,IAARA,EAAgB,MAAO,YAC3B,GAAIA,aAAeK,MAAO,MAAO,QACjC,IAEE,OADAL,EAAIO,KAAI,SAACC,GAAW,OAAAA,KACb,QACP,MAAOC,GACP,cAAcT,EAElB,KAAK,EACL,IAAK,QACHG,QAAQO,MAAM,UAAUV,GACxB,MACF,KAAK,EACL,IAAK,cACL,IAAK,UACL,QACE,OAAOA,KAuBjBW,OAAA,SAAQC,EAAUX,GAYhB,OAAO,SAAUY,GAIf,GAHKZ,IACHA,EAAOY,GAEW,iBAATZ,GAAqBW,EAC9B,OAAQX,GACN,IAAK,OACH,OACF,IAAK,SACH,OAAOW,EACT,IAAK,QAEH,YADAT,QAAQO,MAAM,UAAUE,GAE1B,IAAK,UAEH,YADAT,QAAQW,MAAMF,GAEhB,IAAK,QACH,MAAIA,aAAeP,OAGjBO,EAAIN,UAAmBM,EAAIN,QAAU,cAC/BM,GAEA,IAAIP,MAAMO,GAAO,gBAqBnCG,WAAA,SAAYC,GACV,OAAO,SAAChB,GAQN,MAAkB,mBAAPgB,EACFA,EAAGhB,GAEHA,IAcbiB,WAAA,SAAY,G,IACNC,EADM,kBAAEC,EAAA,EAAAA,MAAOC,EAAA,EAAAA,OAEfC,EAAkC,GAItC,OAAO,SAAgBC,G,mEACrB,IACE,OAAIF,GAAUE,EAAIC,OAASH,EAClB,CAAP,EAAO,OAGkB,iBADzBF,EAAYM,KAAKC,MAAMH,KACcI,MAAMC,QAAQT,GACjDG,EAAUH,EAGVC,EAAMS,SAAQ,SAACC,GACTX,EAAUvB,eAAekC,KAE3BR,EAAQQ,GAAQX,EAAUW,OAIzB,CAAP,EAAOR,IAET,MAAOZ,GACP,MAAO,CAAP,EAAOA,G,mBAMf,UAAe,CAAEX,QAAO,Y","file":"handler.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"curriedForage\"] = factory();\n\telse\n\t\troot[\"curriedForage\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { MaybeFunction, Empty, Purifiable } from './types'\n\nexport type ReturnerType = string | number | object;\n\nexport type MaybeReturnerType = ReturnerType | Empty \n\nexport type LoggerType = 'none' | 'string' | 'trace' | 'console' | 'throw' \n\nexport type MaybeLoggerType = LoggerType | Empty\n\n/* eslint no-fallthrough: 0 */\n\n/**\n * @namespace handler\n * @category handler\n */\nexport const handler = {\n  /**\n   * @name returner\n   * @description Return the value - or don't.\n   * Of special note is case 4, which will tell you if the\n   * result of the operation is true, false, null or undefined.\n   * You can use numbers or strings\n   *\n   * ## TYPES\n   * - 1(quiet) - return void 0\n   * - 2(console) - log the returned value to the console\n   * - 3(break) - throw an error with the contents of the return\n   * - 4(truthy) - return a true or false value\n   * - 5(typeof) - return type of response\n   * - 6(trace) - get a console.trace() of the call stack\n   * - 7(passthrough) - the default does nothing to the return\n   *\n   * @category handler\n   * @memberof handler\n   * @param {*} val\n   * @param {MaybeReturnerType} type\n   * @throws {Error} the message it is passed (if type 3)\n   * @returns {*}\n   * @function\n   */\n  returner (val: any, type: MaybeReturnerType) {\n    return function (returnerType?: ReturnerType) {\n      if (!type) {\n        type = returnerType\n      }\n      const t = typeof type\n      if (t === 'number' || t === 'string') {\n        switch (type) {\n          case 1:\n          case 'quiet': // be totally quiet\n            return void 0\n          case 2:\n          case 'console': // helpful for debugging\n            console.log(val)\n            break\n          case 3:\n          case 'break': // manual breakpoint\n            if (val instanceof Error) {\n              // if it already is an error no need to throw twice\n              // but if the message is empty, fill it.\n              val.message ? void 0 : val.message = 'No value'\n              throw val\n            } else {\n              throw new Error(val || 'No result')\n            }\n          case 4:\n          case 'truthy': // 'truthy': undefined not null\n            return val === null || val === void 0 ? false : val !== false\n          case 5:\n          case 'typeof': // return 'typeof'\n            if (val === null) return 'null'\n            if (val === void 0) return 'undefined'\n            if (val instanceof Error) return 'error'\n            try {\n              val.map((v: any) => v)\n              return 'array'\n            } catch (e) {\n              return typeof val\n            }\n          case 6:\n          case 'trace':\n            console.trace(`TRACE: ${val}`)\n            break\n          case 7:\n          case 'passthrough': // short-circuit\n          case 'default':\n          default:\n            return val\n        }\n      } else { // not a string or a number\n        return val\n      }\n    }\n  },\n\n  /**\n   * @function logger\n   * @description Set logging type for returning errors in a number of ways.\n   * @examples\n   *  handler.returner('not ava')() // returns 'not ava'\n   *  handler.returner('not ava')('truthy') // returns true\n   *  handler.returner('not ava', 'truthy')() // returns true\n   *\n   * @category handler\n   * @memberof handler\n   * @param {*} msg\n   * @param {MaybeLoggerType} type\n   * @throws {Error} - just the message it is passed\n   * @returns {*}\n   */\n  logger (msg: any, type: MaybeLoggerType) {\n    // todo: discuss making things silent in production\n    /*\n    // set with a variable\n    process.env.PRODUCTION === true ? type = 'none' : void 0\n\n    // short circuit (best perf)\n    if(process.env.LOGGING === 'none') return\n\n    // delegate from .env (still global, most flexible)\n    ? process.env.LOGGING ? type = process.env.LOGGING : void 0\n    */\n    return function (loggerType?: LoggerType) {\n      if (!type) {\n        type = loggerType\n      }\n      if (typeof type === 'string' && msg) {\n        switch (type) {\n          case 'none':\n            return\n          case 'string':\n            return msg\n          case 'trace':\n            console.trace(`TRACE: ${msg}`)\n            return\n          case 'console':\n            console.error(msg)\n            return\n          case 'throw':\n            if (msg instanceof Error) {\n              // if it already is an error no need to throw twice,\n              // but if the message is empty, fill it.\n              msg.message ? void 0 : msg.message = 'No message'\n              throw msg\n            } else {\n              throw new Error(msg || 'No result')\n            }\n          default:\n            break\n        }\n      } else {\n        return void 0\n      }\n    }\n  },\n  /**\n   * @name maybeCurry\n   * @description If a function is passed, apply it to the value.\n   * Otherwise, just return the value.\n   * @category handler\n   * @memberof handler\n   * @param {function} fn\n   * @param {*} val\n   * @returns {*}\n   * @function\n   */\n  maybeCurry (fn: MaybeFunction) {\n    return (val: any) => {\n      /* also works - just seems dirty (and dangerous)\n      try {\n        return fn(val)\n      } catch (e) {\n        return val\n      }\n      */\n      if (typeof fn === 'function') {\n        return fn(val)\n      } else {\n        return val\n      }\n    }\n  },\n\n  /**\n   * @name jsonPurify\n   * @description accepts an array and tries to parse the object passed\n   * @category handler\n   * @memberof handler\n   * @param {object} model - the model to map against\n   * @param {number} maxLen - max length of model\n   * @function\n   */\n  jsonPurify ({ model, maxLen }: Purifiable = {}) {\n    let parsedObj: any\n    let safeObj: { [key: string]: any } = {}\n    /**\n     * @param {string}\n     */\n    return async function (str: string) {\n      try {\n        if (maxLen && str.length > maxLen) {\n          return null\n        } else {\n          parsedObj = JSON.parse(str)\n          if (typeof parsedObj !== 'object' || Array.isArray(parsedObj)) {\n            safeObj = parsedObj\n          } else {\n            // copy only expected properties to the safeObj\n            model.forEach((prop) => {\n              if (parsedObj.hasOwnProperty(prop)) {\n                // eslint-disable-next-line security/detect-object-injection\n                safeObj[prop] = parsedObj[prop]\n              }\n            })\n          }\n          return safeObj\n        }\n      } catch (e) {\n        return e\n      }\n    }\n  }\n}\n\nexport default { handler }\n"],"sourceRoot":""}